name: Build OpenSSL

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  OPENSSL_VERSION: 3.5.0

jobs:
  build-openssl:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            compiler: clang
            triplet: darwin64-x86_64-cc
            make: make

          - os: windows-latest
            compiler: mingw
            triplet: mingw64
            make: mingw32-make

          - os: windows-latest
            compiler: msvc
            triplet: VC-WIN64A
            make: nmake

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install Perl (Chocolatey)
        if: runner.os == 'Windows'
        run: choco install strawberryperl -y
        shell: powershell

      - name: Setup MSVC environment
        if: matrix.compiler == 'msvc'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Download and build OpenSSL
        run: |
          curl -LO https://www.openssl.org/source/openssl-${{ env.OPENSSL_VERSION }}.tar.gz
          tar -xf openssl-${{ env.OPENSSL_VERSION }}.tar.gz
          cd openssl-${{ env.OPENSSL_VERSION }}

          echo "Configuring for: ${{ matrix.triplet }}"

          if [[ "${{ matrix.compiler }}" == "msvc" ]]; then
            perl Configure ${{ matrix.triplet }} no-shared --prefix="${{ github.workspace }}/openssl-out"
            ${{ matrix.make }} install_dev
          else
            perl Configure ${{ matrix.triplet }} no-shared --prefix="${{ github.workspace }}/openssl-out"
            ${{ matrix.make }} -j4
            ${{ matrix.make }} install
          fi

      - name: Upload OpenSSL artifact
        uses: actions/upload-artifact@v3
        with:
          name: openssl-${{ env.OPENSSL_VERSION }}-${{ matrix.os }}-${{ matrix.compiler }}
          path: openssl-out
